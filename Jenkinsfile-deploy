node (SLAVE) {

    stage('Install helm') {
        /* This installs helm client */
          sh "curl -O https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz"
          sh "tar -xvf helm-v2.9.1-linux-amd64.tar.gz"
          sh "chmod 777 ./linux-amd64/helm"
          sh "./linux-amd64/helm version"
    }

    stage('Configure helm & add Artifactory repo') {
        /* Configure helm client to point to k8s cluster */
         sh './linux-amd64/helm init --upgrade'
         withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: CREDENTIALS, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
           sh "./linux-amd64/helm version"
           sh "./linux-amd64/helm repo add artifactory ${SERVER_URL}/helm --username ${env.USERNAME} --password ${env.PASSWORD}"
           sh "./linux-amd64/helm repo update"
         }
    }

    stage('Deploy chart pulling from Artifactory') {
        /* Finally, we'll deploy the image to k8s using helm chart. */
        sh "./linux-amd64/helm upgrade my-go-service --install --recreate-pods artifactory/go-service"
    }
}